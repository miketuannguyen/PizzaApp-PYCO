@startuml
actor User
User -> Mobile: Login (phone, password)
Mobile -> Backend: POST /user/login (phone, password)
Backend -> Backend: Schema validate (phone, password): isValid

alt isValid === true
  Backend -> Database: Find user (phone)
  Database --> Backend: userInstance = Response: user's information
  Backend -> Backend: Authenticate user (password): isPasswordValid

  alt userInstance !== null && isPasswordValid === true
    Backend -> Backend: generate JWT token (userId): token
    Backend --> Mobile: Response: userInstance, token
    Mobile -> User: Log user in
    Mobile ->> Mobile: Store (userInstance, JWT token)

    loop jwt token expired
      ref over User, Mobile, Backend, Database: Request Resource
    end

  else userInstance === null || isPasswordValid === false
    Backend --> Mobile: Reponse: Invalid phone or Password
    Mobile --> User: Display error messsage: Invalid phone or Password
  end

else isValid === false
  Backend --> Mobile: Reponse: Invalid payload input
  Mobile --> User: Display error messsage: Invalid payload input
end
@enduml